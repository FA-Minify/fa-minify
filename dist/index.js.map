{"version":3,"file":"index.js","sources":["../src/remove-unused-icons.ts","../src/get-icons-from-file.ts","../src/get-icon-names-from-file.ts"],"sourcesContent":["import { RemoveIconsConfig, IconType } from './types';\r\n\r\nexport function removeUnusedIcons(fileContent: string, config: RemoveIconsConfig) {\r\n  config = config || { usedIcons: {} };\r\n  const usedIcons = config.usedIcons || {};\r\n\r\n  // fontawesoms all.js consists of n+1 functions where n=number of different icon styles (far,fas,fal,fab)\r\n  fileContent = fileContent.replace(/(\\(function\\s*\\(\\)\\s*\\{[\\s\\S.]*?}\\(\\)\\);)/gim, function () {\r\n    const func = arguments[1];\r\n\r\n    // get the type ('far'/'fas'/'fal'/'fab') from function\r\n    const matches = /\\('(fa.)',/gi.exec(arguments[1]) || [];\r\n    const type = matches[1];\r\n\r\n    // no type means this function is the bootstrap function\r\n    // keep it\r\n    if (!type) {\r\n      return func;\r\n    }\r\n\r\n    if (usedIcons[type] && usedIcons[type].length > 0) {\r\n      // we use some icons from this type so we keep this function\r\n      return func;\r\n    }\r\n\r\n    // no icons used from this type so remove the function\r\n    return '';\r\n  });\r\n\r\n  // we search for the icons object, parse it and remove unused icons\r\n  fileContent = fileContent.replace(/(var\\s+icons\\s*=)([\\s\\S.]*?)(;[\\s\\S.]*?defineIcons\\('(fa.)', icons\\);)/gmi, function () {\r\n    const fileIcons = arguments[2] as string;\r\n    const type = arguments[4] as IconType;\r\n\r\n    // parse the icons object read from the file content\r\n    let iconObject = null;\r\n    try {\r\n      iconObject = JSON.parse(fileIcons) as { [key: string]: any[] };\r\n    } catch (e) {\r\n      iconObject = {};\r\n    }\r\n\r\n    // keep usedIcons and remove every other icon\r\n    if (usedIcons[type]) {\r\n      Object.keys(iconObject).forEach(key => {\r\n        if (usedIcons[type].indexOf(key) < 0) {\r\n          delete iconObject[key];\r\n        }\r\n      });\r\n    }\r\n\r\n    // return the code without unused icons\r\n    return arguments[1] + JSON.stringify(iconObject) + arguments[3];\r\n  });\r\n\r\n  return fileContent;\r\n}\r\n","import { IconType } from './types';\r\n\r\nexport function getIconsFromFile(fileContent: string) {\r\n  const icons: { [type in IconType]: { [iconName: string]: any } } = {\r\n    fab: {},\r\n    fal: {},\r\n    far: {},\r\n    fas: {}\r\n  };\r\n\r\n  // we search for the icons object, parse it and remove unused icons\r\n  fileContent = fileContent.replace(/var\\s*icons\\s*=([\\s\\S.]*?);[\\s\\S.]*?'(fa.)'/gmi, function () {\r\n    const fileIcons = arguments[1];\r\n    const type = arguments[2] as IconType;\r\n\r\n    // parse the icons object read from the file content\r\n    let iconObject = null;\r\n    try {\r\n      iconObject = JSON.parse(fileIcons);\r\n    } catch (e) {\r\n      iconObject = {};\r\n    }\r\n\r\n    // add file icons to the icon object\r\n    if (icons[type]) {\r\n      Object.keys(iconObject).forEach(key => {\r\n        icons[type][key] = iconObject[key];\r\n      });\r\n    }\r\n\r\n    return '';\r\n  });\r\n\r\n\r\n  // return found icons\r\n  return icons;\r\n};","import { IconType } from './types';\r\nimport { getIconsFromFile } from './get-icons-from-file';\r\n\r\nexport function getIconNamesFromFile(fileContent: string) {\r\n  const icons = {\r\n    far: <string[]>[],\r\n    fal: <string[]>[],\r\n    fas: <string[]>[],\r\n    fab: <string[]>[]\r\n  };\r\n\r\n  // read icons from file content\r\n  const fileIcons = getIconsFromFile(fileContent);\r\n\r\n  // convert fileIcons into target structure\r\n  Object.keys(icons || {}).forEach(iconType => {\r\n    icons[iconType] = Object.keys(fileIcons[iconType] || {});\r\n  });\r\n\r\n  // return found icons\r\n  return icons;\r\n};"],"names":[],"mappings":"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"}